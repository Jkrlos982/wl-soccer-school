# Shared location blocks for HTTP and HTTPS configurations
# This file is included in both server blocks

# Set variables for JWT processing
set $jwt_user_id "";
set $jwt_school_id "";
set $jwt_roles "";
set $jwt_permissions "";
set $request_id "";

# Global rate limiting
limit_req zone=global burst=100 nodelay;

# Authentication service routes
location /api/v1/auth/ {
    limit_req zone=login burst=10 nodelay;
    
    # Execute JWT validation (will skip for public endpoints)
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.main()
    }
    
    proxy_pass http://auth_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
}

# Financial service routes
location /api/v1/financial/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://financial_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Sports service routes
location /api/v1/sports/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://sports_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Notification service routes
location /api/v1/notifications/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://notification_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Medical service routes
location /api/v1/medical/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://medical_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Payroll service routes
location /api/v1/payroll/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://payroll_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Report service routes
location /api/v1/reports/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://report_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Calendar service routes
location /api/v1/calendar/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://calendar_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Customization service routes
location /api/v1/customization/ {
    limit_req zone=api burst=20 nodelay;
    limit_req zone=user burst=50 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    proxy_pass http://customization_service;
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
}

# Legacy direct microservice access (deprecated, for backward compatibility)
location /auth/ {
    return 301 /api/v1/auth$request_uri;
}

location /financial/ {
    return 301 /api/v1/financial$request_uri;
}

location /sports/ {
    return 301 /api/v1/sports$request_uri;
}

location /notifications/ {
    return 301 /api/v1/notifications$request_uri;
}

location /medical/ {
    return 301 /api/v1/medical$request_uri;
}

location /payroll/ {
    return 301 /api/v1/payroll$request_uri;
}

location /reports/ {
    return 301 /api/v1/reports$request_uri;
}

location /calendar/ {
    return 301 /api/v1/calendar$request_uri;
}

location /customization/ {
    return 301 /api/v1/customization$request_uri;
}

# Static files and frontend
location / {
    # Execute JWT validation for protected frontend routes
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.main()
    }
    
    proxy_pass http://frontend_app;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Enable caching for static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://frontend_app;
        proxy_set_header Host $host;
        expires 1y;
        add_header Cache-Control "public, immutable";
        
        # Set CORS headers for static assets
        access_by_lua_block {
            local jwt_auth = require "jwt_auth"
            jwt_auth.main()
        }
    }
}

# Health check endpoint
location /health {
    access_log off;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
}

# Metrics endpoint (protected)
location /metrics {
    limit_req zone=api burst=5 nodelay;
    
    # JWT authentication required
    access_by_lua_block {
        local jwt_auth = require "jwt_auth"
        jwt_auth.authenticate()
    }
    
    # Only allow admin users
    access_by_lua_block {
        local cjson = require "cjson"
        local roles = cjson.decode(ngx.var.jwt_roles or "[]")
        local has_admin = false
        
        for _, role in ipairs(roles) do
            if role == "super_admin" or role == "school_admin" then
                has_admin = true
                break
            end
        end
        
        if not has_admin then
            ngx.status = 403
            ngx.header.content_type = "application/json"
            ngx.say(cjson.encode({
                error = "Forbidden",
                message = "Admin access required"
            }))
            ngx.exit(403)
        end
    }
    
    return 200 "# Metrics endpoint\n# TODO: Implement Prometheus metrics\n";
    add_header Content-Type text/plain;
}

# Deny access to hidden files
location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
}